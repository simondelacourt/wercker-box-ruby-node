name: node-ruby-rvm
version: 1.1.2
inherits: wercker/ubuntu12.04-webessentials@1.0.4
type: main
platform: ubuntu@14.04
packages:
  - nodejs@0.12.0
  - ruby@1.9.3-p547
  - ruby@1.9.3-p550
  - ruby@1.9.3-p551
  - ruby@2.0.0-p594
  - ruby@2.0.0-p598
  - ruby@2.0.0-p643
  - ruby@2.1.3
  - ruby@2.1.4
  - ruby@2.1.5
  - ruby@2.2.0
  - ruby@2.2.1
  - ruby@2.2.2
  - ruby@2.2.3

description: |
  Wercker box with Node.js and Ruby, RVM on Ubuntu 14.04
keywords:
  - nodejs
  - 0.12
  - nodejs 0.12
  - ubuntu
  - 14.04
  - ubuntu 14.04
  - wercker
  - webessentials
  - ruby
  - rvm

script: |
  sudo apt-get update -y
  sudo apt-get install git zlib1g-dev libreadline-dev libqtwebkit-dev curl -y wget build-essential
  sudo apt-get remove ruby1.9.1
  gpg --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3
  curl -sSL https://get.rvm.io | bash -s stable
  echo "bundler -v~>1.5.1" > $HOME/.rvm/gemsets/global.gems
  source $HOME/.rvm/scripts/rvm
  rvm install 1.9.3-p547
  rvm install 1.9.3-p550
  rvm install 1.9.3-p551
  rvm install 2.0.0-p594
  rvm install 2.0.0-p598
  rvm install 2.0.0-p643
  rvm install 2.1.3
  rvm install 2.1.4
  rvm install 2.1.5
  rvm install 2.2.0
  rvm install 2.2.1
  rvm install 2.2.2
  rvm install 2.2.3
  rvm --default use 2.2.2
  echo "gem: --no-rdoc --no-ri" >> $HOME/.gemrc
  echo "RAILS_ENV=test" | sudo tee -a /etc/environment
  echo "RACK_ENV=test" | sudo tee -a /etc/environment
  export NODEVERSION=0.12.0
  cd $HOME
  mkdir nodeinstall
  cd nodeinstall
  wget http://nodejs.org/dist/v$NODEVERSION/node-v$NODEVERSION.tar.gz
  tar xzf node-v$NODEVERSION.tar.gz
  cd node-v$NODEVERSION
  ./configure
  make
  sudo make install
  cd $HOME
  rm -fr nodeinstall
  node -v

box-detect:
  priority: 200
  version:
  detect:
    - files:
        - Gemfile
default-build:
    ruby-on-rails:
        priority: 100
        detect:
            - files:
                - config
        text-to-append: |-
            # Build definition
            # See the Rails section on the wercker devcenter:
            # http://devcenter.wercker.com/articles/languages/ruby/settingup-rails4.html
            # You will want to define your database as follows:
            # services:
            #   - wercker/postgresql
            # See more about services on our devcenter:
            # http://devcenter.wercker.com/articles/services/
            build:
                steps:
                    # Uncomment this to force RVM to use a specific Ruby version
                    # - rvm-use:
                    #       version: 2.2.1

                    # A step that executes `bundle install` command
                    - bundle-install

                    # A step that prepares the database.yml using the database in services
                    # - rails-database-yml

                    # A custom script step, name value is used in the UI
                    # and the code value contains the command that get executed
                    - script:
                        name: echo ruby information
                        code: |
                            echo "ruby version $(ruby --version) running"
                            echo "from location $(which ruby)"
                            echo -p "gem list: $(gem list)"
                    # Add more steps here:
                    # - script:
                    #        name: rspec
                    #        code: bundle exec rspec
    ruby:
        priority : 50
        detect:
            - default: true
        text-to-append: |-
            # Build definition
            build:
                # The steps that will be executed on build
                # See the Ruby section on the wercker devcenter:
                # http://devcenter.wercker.com/articles/languages/ruby.html
                steps:
                    # Uncomment this to force RVM to use a specific Ruby version
                    # - rvm-use:
                    #       version: 2.2.1

                    # A step that executes `bundle install` command
                    - bundle-install

                    # A custom script step, name value is used in the UI
                    # and the code value contains the command that get executed
                    - script:
                        name: echo ruby information
                        code: |
                            echo "ruby version $(ruby --version) running"
                            echo "from location $(which ruby)"
                            echo -p "gem list: $(gem list)"
                    # Add more steps here:
                    # - script:
                    #    name: rspec
                    #    code: bundle exec rspec
